{"version":3,"sources":["utils/helpers.js","components/Nav/index.js","assets/cover/world-map.png","components/About/index.js","components/Contact/index.js","App.js","reportWebVitals.js","index.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","contactSelected","currentCategory","setContactSelected","useEffect","document","title","name","className","href","role","onClick","map","category","About","id","src","coverImage","style","width","alt","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","length","console","log","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","App","description","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27d9a070.chunk.js","sourcesContent":["export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Nav(props) {\n  const {\n    categories = [],\n    setCurrentCategory,\n    contactSelected,\n    currentCategory,\n    setContactSelected,\n  } = props;\n\n  useEffect(() => {\n    document.title = capitalizeFirstLetter(currentCategory.name);\n  }, [currentCategory]);\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h2>\n        <a data-testid=\"link\" href=\"/\">\n          <span role=\"img\" aria-label=\"camera\"> CJD - </span> Conor Donnelly\n        </a>\n      </h2>\n      <nav>\n        <ul className=\"flex-row\">\n          <li className=\"mx-2\">\n            <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n              About me\n            </a>\n          </li>\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n            <span onClick={() => setContactSelected(true)}>Contact</span>\n          </li>\n          {categories.map((category) => (\n            <li\n              className={`mx-1 ${currentCategory.name === category.name && !contactSelected && 'navActive'\n                }`}\n              key={category.name}\n            >\n              <span\n                onClick={() => {\n                  setCurrentCategory(category);\n                  setContactSelected(false);\n                }}\n              >\n                {capitalizeFirstLetter(category.name)}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/world-map.fd7b010f.png\";","import React from 'react';\nimport coverImage from '../../assets/cover/world-map.png';\nfunction About() {\n  return (\n    <section className=\"my-5\">\n      <h1 id=\"about\">Who am I?</h1>\n      <div className=\"my-2\">\n        <p>\n          Full Stack Web Developer with a B.S. degree in Geography (GIS) and a passion for life-long learning.\n          Valued team member providing support for business analysis, data analytics, cloud service administration, data modeling and design.\n          Effective at translating complex business requirements for both technical and non-technical staff. Skilled collaborator and communicator,\n          driven by relentless curiosity to seek out solutions for bugs and also discover new possibilities for improving application design.\n        </p>\n      </div>\n      <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\n    </section>\n  );\n}\n\nexport default About;\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      console.log('Submit Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n      console.log('Handle Form', formState);\n    }\n  };\n\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport ContactForm from './components/Contact';\n// import Header from './components/Header';\n// import Projects from './components/Projects';\n\n\n\nfunction App() {\n  const [categories] = useState([\n    {\n      name: 'GIS',\n      description: 'Projects highlighting my experience with GIS.',\n    },\n    { name: 'Water Quality', description: 'Projects aimed to improve water quality for all Minnesotans.' },\n    { name: 'Grants Administration', description: 'Projects to integrate digital document signing with grants administration.' },\n    { name: 'Private Lands Conservation', description: 'Projects working to secure voluntary conservation easements on private land.' },\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  const [contactSelected, setContactSelected] = useState(false);\n\n  return (\n    <div>\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n        {!contactSelected ? (\n          <>\n            <About></About>\n          </>\n        ) : (\n          <ContactForm></ContactForm>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}